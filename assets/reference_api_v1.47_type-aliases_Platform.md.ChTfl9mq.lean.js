import{_ as t,c as a,a2 as r,o}from"./chunks/framework.DE7eXg1i.js";const f=JSON.parse('{"title":"Type Alias: Platform","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/type-aliases/Platform.md","filePath":"reference/api/v1.47/type-aliases/Platform.md"}'),d={name:"reference/api/v1.47/type-aliases/Platform.md"};function c(l,e,s,i,p,n){return o(),a("div",null,e[0]||(e[0]=[r('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / Platform</p><h1 id="type-alias-platform" tabindex="-1">Type Alias: Platform <a class="header-anchor" href="#type-alias-platform" aria-label="Permalink to &quot;Type Alias: Platform&quot;">​</a></h1><blockquote><p><strong>Platform</strong>: <code>object</code></p></blockquote><p>Platform represents the platform (Arch/OS).</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Architecture</code>?</td><td><code>string</code></td><td>Architecture represents the hardware architecture (for example, <code>x86_64</code>).</td></tr><tr><td><code>OS</code>?</td><td><code>string</code></td><td>OS represents the Operating System (for example, <code>linux</code> or <code>windows</code>).</td></tr></tbody></table>',6)]))}const m=t(d,[["render",c]]);export{f as __pageData,m as default};
