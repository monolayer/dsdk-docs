import{_ as e,c as o,a2 as d,o as c}from"./chunks/framework.DE7eXg1i.js";const p=JSON.parse('{"title":"Type Alias: HostConfig","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/type-aliases/HostConfig.md","filePath":"reference/api/v1.47/type-aliases/HostConfig.md"}'),r={name:"reference/api/v1.47/type-aliases/HostConfig.md"};function n(a,t,i,s,l,h){return c(),o("div",null,t[0]||(t[0]=[d('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / HostConfig</p><h1 id="type-alias-hostconfig" tabindex="-1">Type Alias: HostConfig <a class="header-anchor" href="#type-alias-hostconfig" aria-label="Permalink to &quot;Type Alias: HostConfig&quot;">​</a></h1><blockquote><p><strong>HostConfig</strong>: <a href="./Resources.html"><code>Resources</code></a> &amp; <code>object</code></p></blockquote><p>Container configuration that depends on the host we are running on</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Annotations</code>?</td><td><code>object</code></td><td>Arbitrary non-identifying metadata attached to container and provided to the runtime when the container is started.</td></tr><tr><td><code>AutoRemove</code>?</td><td><code>boolean</code></td><td>Automatically remove the container when the container&#39;s process exits. This has no effect if <code>RestartPolicy</code> is set.</td></tr><tr><td><code>Binds</code>?</td><td><code>string</code>[]</td><td>A list of volume bindings for this container. Each volume binding is a string in one of these forms: - <code>host-src:container-dest[:options]</code> to bind-mount a host path into the container. Both <code>host-src</code>, and <code>container-dest</code> must be an <em>absolute</em> path. - <code>volume-name:container-dest[:options]</code> to bind-mount a volume managed by a volume driver into the container. <code>container-dest</code> must be an <em>absolute</em> path. <code>options</code> is an optional, comma-delimited list of: - <code>nocopy</code> disables automatic copying of data from the container path to the volume. The <code>nocopy</code> flag only applies to named volumes. - `[ro</td></tr><tr><td><code>CapAdd</code>?</td><td><code>string</code>[]</td><td>A list of kernel capabilities to add to the container. Conflicts with option &#39;Capabilities&#39;.</td></tr><tr><td><code>CapDrop</code>?</td><td><code>string</code>[]</td><td>A list of kernel capabilities to drop from the container. Conflicts with option &#39;Capabilities&#39;.</td></tr><tr><td><code>Cgroup</code>?</td><td><code>string</code></td><td>Cgroup to use for the container.</td></tr><tr><td><code>CgroupnsMode</code>?</td><td><code>&quot;private&quot;</code> | <code>&quot;host&quot;</code></td><td>cgroup namespace mode for the container. Possible values are: - <code>&quot;private&quot;</code>: the container runs in its own private cgroup namespace - <code>&quot;host&quot;</code>: use the host system&#39;s cgroup namespace If not specified, the daemon default is used, which can either be <code>&quot;private&quot;</code> or <code>&quot;host&quot;</code>, depending on daemon version, kernel support and configuration.</td></tr><tr><td><code>ConsoleSize</code>?</td><td>[<code>number</code>, <code>number</code>] | <code>null</code></td><td>Initial console size, as an <code>[height, width]</code> array.</td></tr><tr><td><code>ContainerIDFile</code>?</td><td><code>string</code></td><td>Path to a file where the container ID is written</td></tr><tr><td><code>Dns</code>?</td><td><code>string</code>[]</td><td>A list of DNS servers for the container to use.</td></tr><tr><td><code>DnsOptions</code>?</td><td><code>string</code>[]</td><td>A list of DNS options.</td></tr><tr><td><code>DnsSearch</code>?</td><td><code>string</code>[]</td><td>A list of DNS search domains.</td></tr><tr><td><code>ExtraHosts</code>?</td><td><code>string</code>[]</td><td>A list of hostnames/IP mappings to add to the container&#39;s <code>/etc/hosts</code> file. Specified in the form <code>[&quot;hostname:IP&quot;]</code>.</td></tr><tr><td><code>GroupAdd</code>?</td><td><code>string</code>[]</td><td>A list of additional groups that the container process will run as.</td></tr><tr><td><code>IpcMode</code>?</td><td><code>string</code></td><td>IPC sharing mode for the container. Possible values are: - <code>&quot;none&quot;</code>: own private IPC namespace, with /dev/shm not mounted - <code>&quot;private&quot;</code>: own private IPC namespace - <code>&quot;shareable&quot;</code>: own private IPC namespace, with a possibility to share it with other containers - `&quot;container:&lt;name</td></tr><tr><td><code>Isolation</code>?</td><td><code>&quot;default&quot;</code> | <code>&quot;process&quot;</code> | <code>&quot;hyperv&quot;</code></td><td>Isolation technology of the container. (Windows only)</td></tr><tr><td><code>Links</code>?</td><td><code>string</code>[]</td><td>A list of links for the container in the form <code>container_name:alias</code>.</td></tr><tr><td><code>LogConfig</code>?</td><td><code>object</code></td><td>The logging configuration for this container</td></tr><tr><td><code>LogConfig.Config</code>?</td><td><code>object</code></td><td>-</td></tr><tr><td><code>LogConfig.Type</code>?</td><td><code>&quot;json-file&quot;</code> | <code>&quot;syslog&quot;</code> | <code>&quot;journald&quot;</code> | <code>&quot;gelf&quot;</code> | <code>&quot;fluentd&quot;</code> | <code>&quot;awslogs&quot;</code> | <code>&quot;splunk&quot;</code> | <code>&quot;etwlogs&quot;</code> | <code>&quot;none&quot;</code></td><td>-</td></tr><tr><td><code>MaskedPaths</code>?</td><td><code>string</code>[]</td><td>The list of paths to be masked inside the container (this overrides the default set of paths).</td></tr><tr><td><code>Mounts</code>?</td><td><a href="./Mount.html"><code>Mount</code></a>[]</td><td>Specification for mounts to be added to the container.</td></tr><tr><td><code>NetworkMode</code>?</td><td><code>string</code></td><td>Network mode to use for this container. Supported standard values are: <code>bridge</code>, <code>host</code>, <code>none</code>, and `container:&lt;name</td></tr><tr><td><code>OomScoreAdj</code>?</td><td><code>number</code></td><td>An integer value containing the score given to the container in order to tune OOM killer preferences.</td></tr><tr><td><code>PidMode</code>?</td><td><code>string</code></td><td>Set the PID (Process) Namespace mode for the container. It can be either: - `&quot;container:&lt;name</td></tr><tr><td><code>PortBindings</code>?</td><td><a href="./PortMap.html"><code>PortMap</code></a></td><td>-</td></tr><tr><td><code>Privileged</code>?</td><td><code>boolean</code></td><td>Gives the container full access to the host.</td></tr><tr><td><code>PublishAllPorts</code>?</td><td><code>boolean</code></td><td>Allocates an ephemeral host port for all of a container&#39;s exposed ports. Ports are de-allocated when the container stops and allocated when the container starts. The allocated port might be changed when restarting the container. The port is selected from the ephemeral port range that depends on the kernel. For example, on Linux the range is defined by <code>/proc/sys/net/ipv4/ip_local_port_range</code>.</td></tr><tr><td><code>ReadonlyPaths</code>?</td><td><code>string</code>[]</td><td>The list of paths to be set as read-only inside the container (this overrides the default set of paths).</td></tr><tr><td><code>ReadonlyRootfs</code>?</td><td><code>boolean</code></td><td>Mount the container&#39;s root filesystem as read only.</td></tr><tr><td><code>RestartPolicy</code>?</td><td><a href="./RestartPolicy.html"><code>RestartPolicy</code></a></td><td>-</td></tr><tr><td><code>Runtime</code>?</td><td><code>string</code></td><td>Runtime to use with this container.</td></tr><tr><td><code>SecurityOpt</code>?</td><td><code>string</code>[]</td><td>A list of string values to customize labels for MLS systems, such as SELinux.</td></tr><tr><td><code>ShmSize</code>?</td><td><code>number</code></td><td>Size of <code>/dev/shm</code> in bytes. If omitted, the system uses 64MB.</td></tr><tr><td><code>StorageOpt</code>?</td><td><code>object</code></td><td>Storage driver options for this container, in the form <code>{&quot;size&quot;: &quot;120G&quot;}</code>.</td></tr><tr><td><code>Sysctls</code>?</td><td><code>object</code></td><td>A list of kernel parameters (sysctls) to set in the container. For example: <code>{&quot;net.ipv4.ip_forward&quot;: &quot;1&quot;}</code></td></tr><tr><td><code>Tmpfs</code>?</td><td><code>object</code></td><td>A map of container directories which should be replaced by tmpfs mounts, and their corresponding mount options. For example: <code>{ &quot;/run&quot;: &quot;rw,noexec,nosuid,size=65536k&quot; }</code></td></tr><tr><td><code>UsernsMode</code>?</td><td><code>string</code></td><td>Sets the usernamespace mode for the container when usernamespace remapping option is enabled.</td></tr><tr><td><code>UTSMode</code>?</td><td><code>string</code></td><td>UTS namespace to use for the container.</td></tr><tr><td><code>VolumeDriver</code>?</td><td><code>string</code></td><td>Driver that this container uses to mount volumes.</td></tr><tr><td><code>VolumesFrom</code>?</td><td><code>string</code>[]</td><td>A list of volumes to inherit from another container, specified in the form: <code>&lt;container-name&gt;[:&lt;ro|rw&gt;]</code></td></tr></tbody></table>',6)]))}const m=e(r,[["render",n]]);export{p as __pageData,m as default};
