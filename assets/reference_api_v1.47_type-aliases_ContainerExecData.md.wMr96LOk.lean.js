import{_ as t,c as d,a2 as o,o as c}from"./chunks/framework.DE7eXg1i.js";const u=JSON.parse('{"title":"Type Alias: ContainerExecData","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/type-aliases/ContainerExecData.md","filePath":"reference/api/v1.47/type-aliases/ContainerExecData.md"}'),a={name:"reference/api/v1.47/type-aliases/ContainerExecData.md"};function r(n,e,i,s,l,h){return c(),d("div",null,e[0]||(e[0]=[o('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / ContainerExecData</p><h1 id="type-alias-containerexecdata" tabindex="-1">Type Alias: ContainerExecData <a class="header-anchor" href="#type-alias-containerexecdata" aria-label="Permalink to &quot;Type Alias: ContainerExecData&quot;">​</a></h1><blockquote><p><strong>ContainerExecData</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>body</code></td><td><code>object</code></td><td>Exec configuration</td></tr><tr><td><code>body.AttachStderr</code>?</td><td><code>boolean</code></td><td>Attach to <code>stderr</code> of the exec command.</td></tr><tr><td><code>body.AttachStdin</code>?</td><td><code>boolean</code></td><td>Attach to <code>stdin</code> of the exec command.</td></tr><tr><td><code>body.AttachStdout</code>?</td><td><code>boolean</code></td><td>Attach to <code>stdout</code> of the exec command.</td></tr><tr><td><code>body.Cmd</code>?</td><td><code>string</code>[]</td><td>Command to run, as a string or array of strings.</td></tr><tr><td><code>body.ConsoleSize</code>?</td><td>[<code>number</code>, <code>number</code>] | <code>null</code></td><td>Initial console size, as an <code>[height, width]</code> array.</td></tr><tr><td><code>body.DetachKeys</code>?</td><td><code>string</code></td><td>Override the key sequence for detaching a container. Format is a single character <code>[a-Z]</code> or <code>ctrl-&lt;value&gt;</code> where <code>&lt;value&gt;</code> is one of: <code>a-z</code>, <code>@</code>, <code>^</code>, <code>[</code>, <code>,</code> or <code>_</code>.</td></tr><tr><td><code>body.Env</code>?</td><td><code>string</code>[]</td><td>A list of environment variables in the form <code>[&quot;VAR=value&quot;, ...]</code>.</td></tr><tr><td><code>body.Privileged</code>?</td><td><code>boolean</code></td><td>Runs the exec process with extended privileges.</td></tr><tr><td><code>body.Tty</code>?</td><td><code>boolean</code></td><td>Allocate a pseudo-TTY.</td></tr><tr><td><code>body.User</code>?</td><td><code>string</code></td><td>The user, and optionally, group to run the exec process inside the container. Format is one of: <code>user</code>, <code>user:group</code>, <code>uid</code>, or <code>uid:gid</code>.</td></tr><tr><td><code>body.WorkingDir</code>?</td><td><code>string</code></td><td>The working directory for the exec process inside the container.</td></tr><tr><td><code>path</code></td><td><code>object</code></td><td>-</td></tr><tr><td><code>path.id</code></td><td><code>string</code></td><td>ID or name of container</td></tr></tbody></table>',5)]))}const b=t(a,[["render",r]]);export{u as __pageData,b as default};
