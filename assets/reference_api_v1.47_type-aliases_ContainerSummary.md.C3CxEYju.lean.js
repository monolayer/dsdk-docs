import{_ as e,c as d,a2 as o,o as a}from"./chunks/framework.DE7eXg1i.js";const u=JSON.parse('{"title":"Type Alias: ContainerSummary","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/type-aliases/ContainerSummary.md","filePath":"reference/api/v1.47/type-aliases/ContainerSummary.md"}'),r={name:"reference/api/v1.47/type-aliases/ContainerSummary.md"};function c(n,t,i,s,h,m){return a(),d("div",null,t[0]||(t[0]=[o('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / ContainerSummary</p><h1 id="type-alias-containersummary" tabindex="-1">Type Alias: ContainerSummary <a class="header-anchor" href="#type-alias-containersummary" aria-label="Permalink to &quot;Type Alias: ContainerSummary&quot;">​</a></h1><blockquote><p><strong>ContainerSummary</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Command</code>?</td><td><code>string</code></td><td>Command to run when starting the container</td></tr><tr><td><code>Created</code>?</td><td><code>number</code></td><td>When the container was created</td></tr><tr><td><code>HostConfig</code>?</td><td><code>object</code></td><td>-</td></tr><tr><td><code>HostConfig.Annotations</code>?</td><td><code>object</code> | <code>null</code></td><td>Arbitrary key-value metadata attached to container</td></tr><tr><td><code>HostConfig.NetworkMode</code>?</td><td><code>string</code></td><td>-</td></tr><tr><td><code>Id</code>?</td><td><code>string</code></td><td>The ID of this container</td></tr><tr><td><code>Image</code>?</td><td><code>string</code></td><td>The name of the image used when creating this container</td></tr><tr><td><code>ImageID</code>?</td><td><code>string</code></td><td>The ID of the image that this container was created from</td></tr><tr><td><code>Labels</code>?</td><td><code>object</code></td><td>User-defined key/value metadata.</td></tr><tr><td><code>Mounts</code>?</td><td><a href="./MountPoint.html"><code>MountPoint</code></a>[]</td><td>-</td></tr><tr><td><code>Names</code>?</td><td><code>string</code>[]</td><td>The names that this container has been given</td></tr><tr><td><code>NetworkSettings</code>?</td><td><code>object</code></td><td>A summary of the container&#39;s network settings</td></tr><tr><td><code>NetworkSettings.Networks</code>?</td><td><code>object</code></td><td>-</td></tr><tr><td><code>Ports</code>?</td><td><a href="./Port.html"><code>Port</code></a>[]</td><td>The ports exposed by this container</td></tr><tr><td><code>SizeRootFs</code>?</td><td><code>number</code></td><td>The total size of all the files in this container</td></tr><tr><td><code>SizeRw</code>?</td><td><code>number</code></td><td>The size of files that have been created or changed by this container</td></tr><tr><td><code>State</code>?</td><td><code>string</code></td><td>The state of this container (e.g. <code>Exited</code>)</td></tr><tr><td><code>Status</code>?</td><td><code>string</code></td><td>Additional human-readable status of this container (e.g. <code>Exit 0</code>)</td></tr></tbody></table>',5)]))}const p=e(r,[["render",c]]);export{u as __pageData,p as default};
