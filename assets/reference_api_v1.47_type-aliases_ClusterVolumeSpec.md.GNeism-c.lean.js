import{_ as t,c as o,a2 as d,o as s}from"./chunks/framework.DE7eXg1i.js";const h=JSON.parse('{"title":"Type Alias: ClusterVolumeSpec","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/type-aliases/ClusterVolumeSpec.md","filePath":"reference/api/v1.47/type-aliases/ClusterVolumeSpec.md"}'),a={name:"reference/api/v1.47/type-aliases/ClusterVolumeSpec.md"};function c(r,e,i,l,u,n){return s(),o("div",null,e[0]||(e[0]=[d('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / ClusterVolumeSpec</p><h1 id="type-alias-clustervolumespec" tabindex="-1">Type Alias: ClusterVolumeSpec <a class="header-anchor" href="#type-alias-clustervolumespec" aria-label="Permalink to &quot;Type Alias: ClusterVolumeSpec&quot;">​</a></h1><blockquote><p><strong>ClusterVolumeSpec</strong>: <code>object</code></p></blockquote><p>Cluster-specific options used to create the volume.</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>AccessMode</code>?</td><td><code>object</code></td><td>Defines how the volume is used by tasks.</td></tr><tr><td><code>AccessMode.AccessibilityRequirements</code>?</td><td><code>object</code></td><td>Requirements for the accessible topology of the volume. These fields are optional. For an in-depth description of what these fields mean, see the CSI specification.</td></tr><tr><td><code>AccessMode.AccessibilityRequirements.Preferred</code>?</td><td><a href="./Topology.html"><code>Topology</code></a>[]</td><td>A list of topologies that the volume should attempt to be provisioned in.</td></tr><tr><td><code>AccessMode.AccessibilityRequirements.Requisite</code>?</td><td><a href="./Topology.html"><code>Topology</code></a>[]</td><td>A list of required topologies, at least one of which the volume must be accessible from.</td></tr><tr><td><code>AccessMode.Availability</code>?</td><td><code>&quot;active&quot;</code> | <code>&quot;pause&quot;</code> | <code>&quot;drain&quot;</code></td><td>The availability of the volume for use in tasks. - <code>active</code> The volume is fully available for scheduling on the cluster - <code>pause</code> No new workloads should use the volume, but existing workloads are not stopped. - <code>drain</code> All workloads using this volume should be stopped and rescheduled, and no new ones should be started.</td></tr><tr><td><code>AccessMode.CapacityRange</code>?</td><td><code>object</code></td><td>The desired capacity that the volume should be created with. If empty, the plugin will decide the capacity.</td></tr><tr><td><code>AccessMode.CapacityRange.LimitBytes</code>?</td><td><code>number</code></td><td>The volume must not be bigger than this. The value of 0 indicates an unspecified maximum.</td></tr><tr><td><code>AccessMode.CapacityRange.RequiredBytes</code>?</td><td><code>number</code></td><td>The volume must be at least this big. The value of 0 indicates an unspecified minimum</td></tr><tr><td><code>AccessMode.MountVolume</code>?</td><td><code>unknown</code></td><td>Options for using this volume as a Mount-type volume. Either MountVolume or BlockVolume, but not both, must be present. properties: FsType: type: &quot;string&quot; description:</td></tr><tr><td><code>AccessMode.Scope</code>?</td><td><code>&quot;single&quot;</code> | <code>&quot;multi&quot;</code></td><td>The set of nodes this volume can be used on at one time. - <code>single</code> The volume may only be scheduled to one node at a time. - <code>multi</code> the volume may be scheduled to any supported number of nodes at a time.</td></tr><tr><td><code>AccessMode.Secrets</code>?</td><td><code>object</code>[]</td><td>Swarm Secrets that are passed to the CSI storage plugin when operating on this volume.</td></tr><tr><td><code>AccessMode.Sharing</code>?</td><td><code>&quot;none&quot;</code> | <code>&quot;readonly&quot;</code> | <code>&quot;onewriter&quot;</code> | <code>&quot;all&quot;</code></td><td>The number and way that different tasks can use this volume at one time. - <code>none</code> The volume may only be used by one task at a time. - <code>readonly</code> The volume may be used by any number of tasks, but they all must mount the volume as readonly - <code>onewriter</code> The volume may be used by any number of tasks, but only one may mount it as read/write. - <code>all</code> The volume may have any number of readers and writers.</td></tr><tr><td><code>Group</code>?</td><td><code>string</code></td><td>Group defines the volume group of this volume. Volumes belonging to the same group can be referred to by group name when creating Services. Referring to a volume by group instructs Swarm to treat volumes in that group interchangeably for the purpose of scheduling. Volumes with an empty string for a group technically all belong to the same, emptystring group.</td></tr></tbody></table>',6)]))}const p=t(a,[["render",c]]);export{h as __pageData,p as default};
