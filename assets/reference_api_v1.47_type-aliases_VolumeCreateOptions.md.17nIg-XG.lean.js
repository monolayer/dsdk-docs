import{_ as t,c as a,a2 as o,o as d}from"./chunks/framework.DE7eXg1i.js";const u=JSON.parse('{"title":"Type Alias: VolumeCreateOptions","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/type-aliases/VolumeCreateOptions.md","filePath":"reference/api/v1.47/type-aliases/VolumeCreateOptions.md"}'),r={name:"reference/api/v1.47/type-aliases/VolumeCreateOptions.md"};function i(s,e,c,l,n,p){return d(),a("div",null,e[0]||(e[0]=[o('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / VolumeCreateOptions</p><h1 id="type-alias-volumecreateoptions" tabindex="-1">Type Alias: VolumeCreateOptions <a class="header-anchor" href="#type-alias-volumecreateoptions" aria-label="Permalink to &quot;Type Alias: VolumeCreateOptions&quot;">​</a></h1><blockquote><p><strong>VolumeCreateOptions</strong>: <code>object</code></p></blockquote><p>Volume configuration</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>ClusterVolumeSpec</code>?</td><td><a href="./ClusterVolumeSpec.html"><code>ClusterVolumeSpec</code></a></td><td>-</td></tr><tr><td><code>Driver</code>?</td><td><code>string</code></td><td>Name of the volume driver to use.</td></tr><tr><td><code>DriverOpts</code>?</td><td><code>object</code></td><td>A mapping of driver options and values. These options are passed directly to the driver and are driver specific.</td></tr><tr><td><code>Labels</code>?</td><td><code>object</code></td><td>User-defined key/value metadata.</td></tr><tr><td><code>Name</code>?</td><td><code>string</code></td><td>The new volume&#39;s name. If not specified, Docker generates a name.</td></tr></tbody></table>',6)]))}const h=t(r,[["render",i]]);export{u as __pageData,h as default};
