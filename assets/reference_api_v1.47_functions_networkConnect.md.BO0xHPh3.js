import{_ as t,c as o,a2 as n,o as a}from"./chunks/framework.DE7eXg1i.js";const k=JSON.parse('{"title":"Function: networkConnect()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/functions/networkConnect.md","filePath":"reference/api/v1.47/functions/networkConnect.md"}'),r={name:"reference/api/v1.47/functions/networkConnect.md"};function c(s,e,d,i,p,l){return a(),o("div",null,e[0]||(e[0]=[n('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / networkConnect</p><h1 id="function-networkconnect" tabindex="-1">Function: networkConnect() <a class="header-anchor" href="#function-networkconnect" aria-label="Permalink to &quot;Function: networkConnect()&quot;">​</a></h1><blockquote><p><strong>networkConnect</strong>(<code>opts</code>): <code>Promise</code>&lt;<a href="./../type-aliases/NetworkConnectResponse.html"><code>NetworkConnectResponse</code></a>&gt;</p></blockquote><p>Connect a container to a network</p><p>The network must be either a local-scoped network or a swarm-scoped network with the <code>attachable</code> option set. A network cannot be re-attached to a running container</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><p><code>opts</code></p></td><td><p><a href="./../type-aliases/ExtendedOptions.html"><code>ExtendedOptions</code></a>&lt;<a href="./../type-aliases/NetworkConnectData.html"><code>NetworkConnectData</code></a>&gt;</p></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Promise</code>&lt;<a href="./../type-aliases/NetworkConnectResponse.html"><code>NetworkConnectResponse</code></a>&gt;</p>',9)]))}const u=t(r,[["render",c]]);export{k as __pageData,u as default};
