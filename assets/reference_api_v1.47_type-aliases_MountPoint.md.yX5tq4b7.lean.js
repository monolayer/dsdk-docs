import{_ as t,c as o,a2 as d,o as n}from"./chunks/framework.DE7eXg1i.js";const l=JSON.parse('{"title":"Type Alias: MountPoint","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/type-aliases/MountPoint.md","filePath":"reference/api/v1.47/type-aliases/MountPoint.md"}'),i={name:"reference/api/v1.47/type-aliases/MountPoint.md"};function r(a,e,c,s,u,h){return n(),o("div",null,e[0]||(e[0]=[d('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / MountPoint</p><h1 id="type-alias-mountpoint" tabindex="-1">Type Alias: MountPoint <a class="header-anchor" href="#type-alias-mountpoint" aria-label="Permalink to &quot;Type Alias: MountPoint&quot;">​</a></h1><blockquote><p><strong>MountPoint</strong>: <code>object</code></p></blockquote><p>MountPoint represents a mount point configuration inside the container. This is used for reporting the mountpoints in use by a container.</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Destination</code>?</td><td><code>string</code></td><td>Destination is the path relative to the container root (<code>/</code>) where the <code>Source</code> is mounted inside the container.</td></tr><tr><td><code>Driver</code>?</td><td><code>string</code></td><td>Driver is the volume driver used to create the volume (if it is a volume).</td></tr><tr><td><code>Mode</code>?</td><td><code>string</code></td><td>Mode is a comma separated list of options supplied by the user when creating the bind/volume mount. The default is platform-specific (<code>&quot;z&quot;</code> on Linux, empty on Windows).</td></tr><tr><td><code>Name</code>?</td><td><code>string</code></td><td>Name is the name reference to the underlying data defined by <code>Source</code> e.g., the volume name.</td></tr><tr><td><code>Propagation</code>?</td><td><code>string</code></td><td>Propagation describes how mounts are propagated from the host into the mount point, and vice-versa. Refer to the <a href="https://www.kernel.org/doc/Documentation/filesystems/sharedsubtree.txt" target="_blank" rel="noreferrer">Linux kernel documentation</a> for details. This field is not used on Windows.</td></tr><tr><td><code>RW</code>?</td><td><code>boolean</code></td><td>Whether the mount is mounted writable (read-write).</td></tr><tr><td><code>Source</code>?</td><td><code>string</code></td><td>Source location of the mount. For volumes, this contains the storage location of the volume (within <code>/var/lib/docker/volumes/</code>). For bind-mounts, and <code>npipe</code>, this contains the source (host) part of the bind-mount. For <code>tmpfs</code> mount points, this field is empty.</td></tr><tr><td><code>Type</code>?</td><td><code>&quot;bind&quot;</code> | <code>&quot;volume&quot;</code> | <code>&quot;tmpfs&quot;</code> | <code>&quot;npipe&quot;</code> | <code>&quot;cluster&quot;</code></td><td>The mount type: - <code>bind</code> a mount of a file or directory from the host into the container. - <code>volume</code> a docker volume with the given <code>Name</code>. - <code>tmpfs</code> a <code>tmpfs</code>. - <code>npipe</code> a named pipe from the host into the container. - <code>cluster</code> a Swarm cluster volume</td></tr></tbody></table>',6)]))}const m=t(i,[["render",r]]);export{l as __pageData,m as default};
