import{_ as t,c as o,a2 as a,o as r}from"./chunks/framework.DE7eXg1i.js";const f=JSON.parse('{"title":"Function: networkList()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/functions/networkList.md","filePath":"reference/api/v1.47/functions/networkList.md"}'),s={name:"reference/api/v1.47/functions/networkList.md"};function n(i,e,d,p,c,l){return r(),o("div",null,e[0]||(e[0]=[a('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / networkList</p><h1 id="function-networklist" tabindex="-1">Function: networkList() <a class="header-anchor" href="#function-networklist" aria-label="Permalink to &quot;Function: networkList()&quot;">​</a></h1><blockquote><p><strong>networkList</strong>(<code>opts</code>): <code>Promise</code>&lt;<a href="./../type-aliases/NetworkListResponse.html"><code>NetworkListResponse</code></a>&gt;</p></blockquote><p>List networks</p><p>Returns a list of networks. For details on the format, see the <a href="#operationnetworkinspect">network inspect endpoint</a>.</p><p>Note that it uses a different, smaller representation of a network than inspecting a single network. For example, the list of containers attached to the network is not propagated in API versions 1.28 and up.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><p><code>opts</code></p></td><td><p><a href="./../type-aliases/ExtendedOptions.html"><code>ExtendedOptions</code></a>&lt;<a href="./../type-aliases/NetworkListData.html"><code>NetworkListData</code></a>&gt;</p></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Promise</code>&lt;<a href="./../type-aliases/NetworkListResponse.html"><code>NetworkListResponse</code></a>&gt;</p>',10)]))}const k=t(s,[["render",n]]);export{f as __pageData,k as default};
