import{_ as t,c as o,a2 as d,o as a}from"./chunks/framework.DE7eXg1i.js";const m=JSON.parse('{"title":"Type Alias: Volume","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/type-aliases/Volume.md","filePath":"reference/api/v1.47/type-aliases/Volume.md"}'),r={name:"reference/api/v1.47/type-aliases/Volume.md"};function c(l,e,i,s,u,n){return a(),o("div",null,e[0]||(e[0]=[d('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / Volume</p><h1 id="type-alias-volume" tabindex="-1">Type Alias: Volume <a class="header-anchor" href="#type-alias-volume" aria-label="Permalink to &quot;Type Alias: Volume&quot;">​</a></h1><blockquote><p><strong>Volume</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>ClusterVolume</code>?</td><td><a href="./ClusterVolume.html"><code>ClusterVolume</code></a></td><td>-</td></tr><tr><td><code>CreatedAt</code>?</td><td><code>string</code></td><td>Date/Time the volume was created.</td></tr><tr><td><code>Driver</code></td><td><code>string</code></td><td>Name of the volume driver used by the volume.</td></tr><tr><td><code>Labels</code></td><td><code>object</code></td><td>User-defined key/value metadata.</td></tr><tr><td><code>Mountpoint</code></td><td><code>string</code></td><td>Mount path of the volume on the host.</td></tr><tr><td><code>Name</code></td><td><code>string</code></td><td>Name of the volume.</td></tr><tr><td><code>Options</code></td><td><code>object</code></td><td>The driver specific options used when creating the volume.</td></tr><tr><td><code>Scope</code></td><td><code>&quot;local&quot;</code> | <code>&quot;global&quot;</code></td><td>The level at which the volume exists. Either <code>global</code> for cluster-wide, or <code>local</code> for machine level.</td></tr><tr><td><code>Status</code>?</td><td><code>object</code></td><td>Low-level details about the volume, provided by the volume driver. Details are returned as a map with key/value pairs: <code>{&quot;key&quot;:&quot;value&quot;,&quot;key2&quot;:&quot;value2&quot;}</code>. The <code>Status</code> field is optional, and is omitted if the volume driver does not support this feature.</td></tr><tr><td><code>UsageData</code>?</td><td><code>object</code> | <code>null</code></td><td>Usage details about the volume. This information is used by the <code>GET /system/df</code> endpoint, and omitted in other endpoints.</td></tr></tbody></table>',5)]))}const p=t(r,[["render",c]]);export{m as __pageData,p as default};
