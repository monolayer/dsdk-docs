import{_ as t,c as o,a2 as a,o as r}from"./chunks/framework.DE7eXg1i.js";const u=JSON.parse('{"title":"Function: containerLogs()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/functions/containerLogs.md","filePath":"reference/api/v1.47/functions/containerLogs.md"}'),n={name:"reference/api/v1.47/functions/containerLogs.md"};function c(d,e,s,i,l,p){return r(),o("div",null,e[0]||(e[0]=[a('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / containerLogs</p><h1 id="function-containerlogs" tabindex="-1">Function: containerLogs() <a class="header-anchor" href="#function-containerlogs" aria-label="Permalink to &quot;Function: containerLogs()&quot;">​</a></h1><blockquote><p><strong>containerLogs</strong>(<code>opts</code>, <code>callback</code>): <code>void</code></p></blockquote><p>Get container logs</p><p>Get <code>stdout</code> and <code>stderr</code> logs from a container.</p><p>Note: This endpoint works only for containers with the <code>json-file</code> or <code>journald</code> logging driver.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><p><code>opts</code></p></td><td><p><a href="./../type-aliases/ExtendedOptions.html"><code>ExtendedOptions</code></a>&lt;<a href="./../type-aliases/ContainerLogsData.html"><code>ContainerLogsData</code></a>&gt;</p></td></tr><tr><td><p><code>callback</code></p></td><td><p><a href="./../type-aliases/StreamCallbackFn.html"><code>StreamCallbackFn</code></a></p></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>void</code></p>',10)]))}const f=t(n,[["render",c]]);export{u as __pageData,f as default};
