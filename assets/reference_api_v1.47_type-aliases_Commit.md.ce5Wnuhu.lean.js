import{_ as e,c as a,a2 as o,o as r}from"./chunks/framework.DE7eXg1i.js";const h=JSON.parse('{"title":"Type Alias: Commit","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/type-aliases/Commit.md","filePath":"reference/api/v1.47/type-aliases/Commit.md"}'),d={name:"reference/api/v1.47/type-aliases/Commit.md"};function i(c,t,s,m,l,n){return r(),a("div",null,t[0]||(t[0]=[o('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / Commit</p><h1 id="type-alias-commit" tabindex="-1">Type Alias: Commit <a class="header-anchor" href="#type-alias-commit" aria-label="Permalink to &quot;Type Alias: Commit&quot;">​</a></h1><blockquote><p><strong>Commit</strong>: <code>object</code></p></blockquote><p>Commit holds the Git-commit (SHA1) that a binary was built from, as reported in the version-string of external tools, such as <code>containerd</code>, or <code>runC</code>.</p><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>Expected</code>?</td><td><code>string</code></td><td>Commit ID of external tool expected by dockerd as set at build time.</td></tr><tr><td><code>ID</code>?</td><td><code>string</code></td><td>Actual commit ID of external tool.</td></tr></tbody></table>',6)]))}const f=e(d,[["render",i]]);export{h as __pageData,f as default};
