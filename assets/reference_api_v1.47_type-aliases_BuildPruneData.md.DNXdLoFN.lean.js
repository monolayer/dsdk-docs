import{_ as t,c as a,a2 as d,o}from"./chunks/framework.DE7eXg1i.js";const m=JSON.parse('{"title":"Type Alias: BuildPruneData","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/type-aliases/BuildPruneData.md","filePath":"reference/api/v1.47/type-aliases/BuildPruneData.md"}'),r={name:"reference/api/v1.47/type-aliases/BuildPruneData.md"};function c(i,e,l,s,n,p){return o(),a("div",null,e[0]||(e[0]=[d('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / BuildPruneData</p><h1 id="type-alias-buildprunedata" tabindex="-1">Type Alias: BuildPruneData <a class="header-anchor" href="#type-alias-buildprunedata" aria-label="Permalink to &quot;Type Alias: BuildPruneData&quot;">​</a></h1><blockquote><p><strong>BuildPruneData</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>query</code>?</td><td><code>object</code></td><td>-</td></tr><tr><td><code>query.all</code>?</td><td><code>boolean</code></td><td>Remove all types of build cache</td></tr><tr><td><code>query.filters</code>?</td><td><code>string</code></td><td>A JSON encoded value of the filters (a <code>map[string][]string</code>) to process on the list of build cache objects. Available filters: - <code>until=&lt;timestamp&gt;</code> remove cache older than <code>&lt;timestamp&gt;</code>. The <code>&lt;timestamp&gt;</code> can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. <code>10m</code>, <code>1h30m</code>) computed relative to the daemon&#39;s local time. - <code>id=&lt;id&gt;</code> - <code>parent=&lt;id&gt;</code> - <code>type=&lt;string&gt;</code> - <code>description=&lt;string&gt;</code> - <code>inuse</code> - <code>shared</code> - <code>private</code></td></tr><tr><td><code>query.keep-storage</code>?</td><td><code>number</code></td><td>Amount of disk space in bytes to keep for cache</td></tr></tbody></table>',5)]))}const h=t(r,[["render",c]]);export{m as __pageData,h as default};
