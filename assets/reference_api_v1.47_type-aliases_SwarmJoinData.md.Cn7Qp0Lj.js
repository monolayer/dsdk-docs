import{_ as t,c as a,a2 as d,o}from"./chunks/framework.DE7eXg1i.js";const h=JSON.parse('{"title":"Type Alias: SwarmJoinData","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/type-aliases/SwarmJoinData.md","filePath":"reference/api/v1.47/type-aliases/SwarmJoinData.md"}'),r={name:"reference/api/v1.47/type-aliases/SwarmJoinData.md"};function i(n,e,s,c,l,m){return o(),a("div",null,e[0]||(e[0]=[d('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / SwarmJoinData</p><h1 id="type-alias-swarmjoindata" tabindex="-1">Type Alias: SwarmJoinData <a class="header-anchor" href="#type-alias-swarmjoindata" aria-label="Permalink to &quot;Type Alias: SwarmJoinData&quot;">​</a></h1><blockquote><p><strong>SwarmJoinData</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>body</code></td><td><code>object</code></td><td>-</td></tr><tr><td><code>body.AdvertiseAddr</code>?</td><td><code>string</code></td><td>Externally reachable address advertised to other nodes. This can either be an address/port combination in the form <code>192.168.1.1:4567</code>, or an interface followed by a port number, like <code>eth0:4567</code>. If the port number is omitted, the port number from the listen address is used. If <code>AdvertiseAddr</code> is not specified, it will be automatically detected when possible.</td></tr><tr><td><code>body.DataPathAddr</code>?</td><td><code>string</code></td><td>Address or interface to use for data path traffic (format: `&lt;ip</td></tr><tr><td><code>body.JoinToken</code>?</td><td><code>string</code></td><td>Secret token for joining this swarm.</td></tr><tr><td><code>body.ListenAddr</code>?</td><td><code>string</code></td><td>Listen address used for inter-manager communication if the node gets promoted to manager, as well as determining the networking interface used for the VXLAN Tunnel Endpoint (VTEP).</td></tr><tr><td><code>body.RemoteAddrs</code>?</td><td><code>string</code>[]</td><td>Addresses of manager nodes already participating in the swarm.</td></tr></tbody></table>',5)]))}const f=t(r,[["render",i]]);export{h as __pageData,f as default};
