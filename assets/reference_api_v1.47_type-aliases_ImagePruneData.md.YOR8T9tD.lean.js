import{_ as t,c as a,a2 as o,o as d}from"./chunks/framework.DE7eXg1i.js";const u=JSON.parse('{"title":"Type Alias: ImagePruneData","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/type-aliases/ImagePruneData.md","filePath":"reference/api/v1.47/type-aliases/ImagePruneData.md"}'),r={name:"reference/api/v1.47/type-aliases/ImagePruneData.md"};function c(l,e,n,s,i,m){return d(),a("div",null,e[0]||(e[0]=[o('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / ImagePruneData</p><h1 id="type-alias-imageprunedata" tabindex="-1">Type Alias: ImagePruneData <a class="header-anchor" href="#type-alias-imageprunedata" aria-label="Permalink to &quot;Type Alias: ImagePruneData&quot;">​</a></h1><blockquote><p><strong>ImagePruneData</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>query</code>?</td><td><code>object</code></td><td>-</td></tr><tr><td><code>query.filters</code>?</td><td><code>string</code></td><td>Filters to process on the prune list, encoded as JSON (a <code>map[string][]string</code>). Available filters: - <code>dangling=&lt;boolean&gt;</code> When set to <code>true</code> (or <code>1</code>), prune only unused <em>and</em> untagged images. When set to <code>false</code> (or <code>0</code>), all unused images are pruned. - <code>until=&lt;string&gt;</code> Prune images created before this timestamp. The <code>&lt;timestamp&gt;</code> can be Unix timestamps, date formatted timestamps, or Go duration strings (e.g. <code>10m</code>, <code>1h30m</code>) computed relative to the daemon machine’s time. - <code>label</code> (<code>label=&lt;key&gt;</code>, <code>label=&lt;key&gt;=&lt;value&gt;</code>, <code>label!=&lt;key&gt;</code>, or <code>label!=&lt;key&gt;=&lt;value&gt;</code>) Prune images with (or without, in case <code>label!=...</code> is used) the specified labels.</td></tr></tbody></table>',5)]))}const g=t(r,[["render",c]]);export{u as __pageData,g as default};
