import{_ as a,c as t,a2 as n,o as s}from"./chunks/framework.DE7eXg1i.js";const h=JSON.parse('{"title":"Function: containerPause()","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/functions/containerPause.md","filePath":"reference/api/v1.47/functions/containerPause.md"}'),o={name:"reference/api/v1.47/functions/containerPause.md"};function r(i,e,c,d,p,u){return s(),t("div",null,e[0]||(e[0]=[n('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / containerPause</p><h1 id="function-containerpause" tabindex="-1">Function: containerPause() <a class="header-anchor" href="#function-containerpause" aria-label="Permalink to &quot;Function: containerPause()&quot;">​</a></h1><blockquote><p><strong>containerPause</strong>(<code>opts</code>): <code>Promise</code>&lt;<a href="./../type-aliases/ContainerPauseResponse.html"><code>ContainerPauseResponse</code></a>&gt;</p></blockquote><p>Pause a container</p><p>Use the freezer cgroup to suspend all processes in a container.</p><p>Traditionally, when suspending a process the <code>SIGSTOP</code> signal is used, which is observable by the process being suspended. With the freezer cgroup the process is unaware, and unable to capture, that it is being suspended, and subsequently resumed.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><table><thead><tr><th>Parameter</th><th>Type</th></tr></thead><tbody><tr><td><p><code>opts</code></p></td><td><p><a href="./../type-aliases/ExtendedOptions.html"><code>ExtendedOptions</code></a>&lt;<a href="./../type-aliases/ContainerPauseData.html"><code>ContainerPauseData</code></a>&gt;</p></td></tr></tbody></table><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Promise</code>&lt;<a href="./../type-aliases/ContainerPauseResponse.html"><code>ContainerPauseResponse</code></a>&gt;</p>',10)]))}const f=a(o,[["render",r]]);export{h as __pageData,f as default};
