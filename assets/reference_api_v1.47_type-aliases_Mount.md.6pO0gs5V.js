import{_ as t,c as o,a2 as d,o as r}from"./chunks/framework.DE7eXg1i.js";const h=JSON.parse('{"title":"Type Alias: Mount","description":"","frontmatter":{},"headers":[],"relativePath":"reference/api/v1.47/type-aliases/Mount.md","filePath":"reference/api/v1.47/type-aliases/Mount.md"}'),c={name:"reference/api/v1.47/type-aliases/Mount.md"};function n(a,e,i,s,u,p){return r(),o("div",null,e[0]||(e[0]=[d('<p><a href="./../../modules.html">dsdk</a> / <a href="./../">v1.47</a> / Mount</p><h1 id="type-alias-mount" tabindex="-1">Type Alias: Mount <a class="header-anchor" href="#type-alias-mount" aria-label="Permalink to &quot;Type Alias: Mount&quot;">​</a></h1><blockquote><p><strong>Mount</strong>: <code>object</code></p></blockquote><h2 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>BindOptions</code>?</td><td><code>object</code></td><td>Optional configuration for the <code>bind</code> type.</td></tr><tr><td><code>BindOptions.CreateMountpoint</code>?</td><td><code>boolean</code></td><td>Create mount point on host if missing</td></tr><tr><td><code>BindOptions.NonRecursive</code>?</td><td><code>boolean</code></td><td>Disable recursive bind mount.</td></tr><tr><td><code>BindOptions.Propagation</code>?</td><td><code>&quot;private&quot;</code> | <code>&quot;rprivate&quot;</code> | <code>&quot;shared&quot;</code> | <code>&quot;rshared&quot;</code> | <code>&quot;slave&quot;</code> | <code>&quot;rslave&quot;</code></td><td>A propagation mode with the value <code>[r]private</code>, <code>[r]shared</code>, or <code>[r]slave</code>.</td></tr><tr><td><code>BindOptions.ReadOnlyForceRecursive</code>?</td><td><code>boolean</code></td><td>Raise an error if the mount cannot be made recursively read-only.</td></tr><tr><td><code>BindOptions.ReadOnlyNonRecursive</code>?</td><td><code>boolean</code></td><td>Make the mount non-recursively read-only, but still leave the mount recursive (unless NonRecursive is set to <code>true</code> in conjunction). Added in v1.44, before that version all read-only mounts were non-recursive by default. To match the previous behaviour this will default to <code>true</code> for clients on versions prior to v1.44.</td></tr><tr><td><code>Consistency</code>?</td><td><code>string</code></td><td>The consistency requirement for the mount: <code>default</code>, <code>consistent</code>, <code>cached</code>, or <code>delegated</code>.</td></tr><tr><td><code>ReadOnly</code>?</td><td><code>boolean</code></td><td>Whether the mount should be read-only.</td></tr><tr><td><code>Source</code>?</td><td><code>string</code></td><td>Mount source (e.g. a volume name, a host path).</td></tr><tr><td><code>Target</code>?</td><td><code>string</code></td><td>Container path.</td></tr><tr><td><code>TmpfsOptions</code>?</td><td><code>object</code></td><td>Optional configuration for the <code>tmpfs</code> type.</td></tr><tr><td><code>TmpfsOptions.Mode</code>?</td><td><code>number</code></td><td>The permission mode for the tmpfs mount in an integer.</td></tr><tr><td><code>TmpfsOptions.Options</code>?</td><td><code>string</code>[][]</td><td>The options to be passed to the tmpfs mount. An array of arrays. Flag options should be provided as 1-length arrays. Other types should be provided as as 2-length arrays, where the first item is the key and the second the value.</td></tr><tr><td><code>TmpfsOptions.SizeBytes</code>?</td><td><code>number</code></td><td>The size for the tmpfs mount in bytes.</td></tr><tr><td><code>Type</code>?</td><td><code>&quot;bind&quot;</code> | <code>&quot;volume&quot;</code> | <code>&quot;tmpfs&quot;</code> | <code>&quot;npipe&quot;</code> | <code>&quot;cluster&quot;</code></td><td>The mount type. Available types: - <code>bind</code> Mounts a file or directory from the host into the container. Must exist prior to creating the container. - <code>volume</code> Creates a volume with the given name and options (or uses a pre-existing volume with the same name and options). These are <strong>not</strong> removed when the container is removed. - <code>tmpfs</code> Create a tmpfs with the given options. The mount source cannot be specified for tmpfs. - <code>npipe</code> Mounts a named pipe from the host into the container. Must exist prior to creating the container. - <code>cluster</code> a Swarm cluster volume</td></tr><tr><td><code>VolumeOptions</code>?</td><td><code>object</code></td><td>Optional configuration for the <code>volume</code> type.</td></tr><tr><td><code>VolumeOptions.DriverConfig</code>?</td><td><code>object</code></td><td>Map of driver specific options</td></tr><tr><td><code>VolumeOptions.DriverConfig.Name</code>?</td><td><code>string</code></td><td>Name of the driver to use to create the volume.</td></tr><tr><td><code>VolumeOptions.DriverConfig.Options</code>?</td><td><code>object</code></td><td>key/value map of driver specific options.</td></tr><tr><td><code>VolumeOptions.Labels</code>?</td><td><code>object</code></td><td>User-defined key/value metadata.</td></tr><tr><td><code>VolumeOptions.NoCopy</code>?</td><td><code>boolean</code></td><td>Populate volume with data from the target.</td></tr><tr><td><code>VolumeOptions.Subpath</code>?</td><td><code>string</code></td><td>Source path inside the volume. Must be relative without any back traversals.</td></tr></tbody></table>',5)]))}const m=t(c,[["render",n]]);export{h as __pageData,m as default};
